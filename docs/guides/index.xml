<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Guides on hostctl</title><link>https://guumaster.github.io/hostctl/docs/guides/</link><description>Recent content in Guides on hostctl</description><generator>Hugo -- gohugo.io</generator><copyright>guumaster</copyright><atom:link href="https://guumaster.github.io/hostctl/docs/guides/index.xml" rel="self" type="application/rss+xml"/><item><title>Profiles 101</title><link>https://guumaster.github.io/hostctl/docs/guides/basic_profiles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://guumaster.github.io/hostctl/docs/guides/basic_profiles/</guid><description>Adding a profile Add or Replace: For all this examples it&amp;rsquo;s possible to replace add with replace and it will replace all previous content of the chosen profile with the new one. Add new profile from a file You can store routing as a separate file and add it to the global hosts file when you need. For example, if you have this routing file on any of your projects:</description></item><item><title>Show hosts content</title><link>https://guumaster.github.io/hostctl/docs/guides/show_hosts_content/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://guumaster.github.io/hostctl/docs/guides/show_hosts_content/</guid><description>List profiles You can get a list of all profiles using the list command.
List all profiles Command:
hostctl list
Output:
+---------+--------+----------------+----------------------------+ | PROFILE | STATUS | IP | DOMAIN | +---------+--------+----------------+----------------------------+ | default | on | 127.0.0.1 | localhost | | default | on | 127.0.1.1 | some-existing.local | | default | on | ::1 | ip6-localhost | +---------+--------+----------------+----------------------------+ | lite | on | 192.168.1.51 | jupyter.toolkit-lite.local | +---------+--------+----------------+----------------------------+ | toolkit | on | 192.</description></item><item><title>Enable/Disable profiles</title><link>https://guumaster.github.io/hostctl/docs/guides/enable_disable/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://guumaster.github.io/hostctl/docs/guides/enable_disable/</guid><description>Enable a profile You can enable any profile, the routing will react to it state.
Command:
hostctl enable awesome
Output:
+---------+--------+----------------+------------------------------+ | PROFILE | STATUS | IP | DOMAIN | +---------+--------+----------------+------------------------------+ ... +---------+--------+----------------+------------------------------+ | awesome | on | 127.0.0.1 | web.my-awesome-project.local | | awesome | on | 127.0.0.1 | api.my-awesome-project.local | +---------+--------+----------------+------------------------------+ Disable a profile You can disable any profile, all routing for that profile will stop working.
Disabling a profile does not remove the content from the hosts file, this way you can re-enable it later on.</description></item><item><title>Auto completion</title><link>https://guumaster.github.io/hostctl/docs/guides/auto_completion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://guumaster.github.io/hostctl/docs/guides/auto_completion/</guid><description>Bash Add this line on your $HOME/.bashrc
source &amp;lt;(hostctl completion bash) Zsh Add this line on your $HOME/.zshrc
source &amp;lt;(hostctl completion zsh) NOTE: If you are using oh-my-zsh this method won&amp;rsquo;t work. Check below.
Oh-My-Zsh First generate the plugin with auto completion code hostctl completion zsh &amp;gt; $HOME/.oh-my-zsh/plugins/hostctl/_hostctl Add it to your plugin list in $HOME/.zshrc plugins=(... hostctl) Check that this lines are present somewere in $HOME/.</description></item><item><title>Backup/Restore hosts file</title><link>https://guumaster.github.io/hostctl/docs/guides/backup_restore/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://guumaster.github.io/hostctl/docs/guides/backup_restore/</guid><description>Backup your hosts file You can save a copy of your hosts file with this command:
Command:
hostctl backup --path $HOME/hostctl/
It will create a file $HOME/hostctl/hosts.20200314 with the full content of your hosts file.
Restore a hosts file You can restore a previous backup of your hosts file with this command:
Command:
hostctl restore --from $HOME/hostctl/hosts.20200314
This action will overwrite your hosts file with the content of your backup.</description></item><item><title>Ephemeral profiles</title><link>https://guumaster.github.io/hostctl/docs/guides/ephemeral_profiles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://guumaster.github.io/hostctl/docs/guides/ephemeral_profiles/</guid><description>With hostctl you can add content to your hosts file temporarily with the --wait flag.
The command you run will wait for the given time or until you hit ctrl-c signal.
After that, the action will be undone automatically.
Examples Add temporal and wait for ctrl-c Command: cat .etchosts | hostctl add ephemeral --wait 0
Output:
+-----------+--------+------------+------------------------------+ | PROFILE | STATUS | IP | DOMAIN | +-----------+--------+------------+------------------------------+ | awesome | on | 127.</description></item><item><title>Sync with Docker</title><link>https://guumaster.github.io/hostctl/docs/guides/sync_with_docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://guumaster.github.io/hostctl/docs/guides/sync_with_docker/</guid><description>hostctl allows you synchronize your hosts file with docker containers a simple command.
All sync actions will replace previous content of the given profile. Example Once you have some containers up and running, you can create names for all of them to their container IP.
Command:
hostctl sync docker awesome
Output:
+---------+--------+------------+------------------------+ | PROFILE | STATUS | IP | DOMAIN | +---------+--------+------------+------------------------+ | awesome | on | 172.</description></item><item><title>Sync with Docker Compose</title><link>https://guumaster.github.io/hostctl/docs/guides/sync_with_docker_compose/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://guumaster.github.io/hostctl/docs/guides/sync_with_docker_compose/</guid><description>hostctl allows you synchronize your hosts file with docker-compose project a simple command.
All sync actions will replace previous content of the given profile. Example Command:
hostctl sync docker-compose
Output:
+------------------+--------+--------------+--------------+ | PROFILE | STATUS | IP | DOMAIN | +------------------+--------+--------------+--------------+ | examplevotingapp | on | 192.168.16.6 | worker_1.loc | | examplevotingapp | on | 192.168.16.2 | db.loc | | examplevotingapp | on | 192.</description></item><item><title>Sync with Kubernetes</title><link>https://guumaster.github.io/hostctl/docs/guides/sync_with_kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://guumaster.github.io/hostctl/docs/guides/sync_with_kubernetes/</guid><description>hostctl allows you to synchronize your hosts file with kubernetes namespace a simple command.
TO BE IMPLEMENTED</description></item></channel></rss>